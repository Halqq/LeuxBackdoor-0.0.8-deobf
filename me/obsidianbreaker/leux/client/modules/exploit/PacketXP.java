package me.obsidianbreaker.leux.client.modules.exploit;

import give up;
import java.util.HashMap;
import java.util.Map;
import me.obsidianbreaker.leux.client.guiscreen.settings.Setting;
import me.obsidianbreaker.leux.client.modules.Category;
import me.obsidianbreaker.leux.client.modules.Module;
import net.minecraft.init.Items;
import net.minecraft.item.ItemStack;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.network.play.client.CPacketPlayerDigging;
import net.minecraft.network.play.client.CPacketPlayerTryUseItem;
import net.minecraft.util.EnumHand;
import net.minecraft.util.math.BlockPos;

public class PacketXP extends Module {
  public Setting disable = create("Disable When Full", "PXPDisable", true);
  
  public Setting auto_switch = create("Auto Switch", "PXPAutoSwitch", false);
  
  public Setting armor_percent = create("Armor %", "PXPArmorPercent", 80, 0, 100);
  
  public Map get_inv_slots(int paramInt) {
    paramInt = 5;
    (give up)null;
    HashMap<Object, Object> hashMap = new HashMap<>();
    while (paramInt <= 8) {
      hashMap.put(Integer.valueOf(paramInt), mc.field_71439_g.field_71069_bz.func_75138_a().get(paramInt));
      paramInt++;
    } 
    return hashMap;
  }
  
  public void update() {
    (give up)null;
    if (!mc.field_71439_g.func_70051_ag() && mc.field_71439_g.field_70122_E && mc.field_71439_g.field_71071_by.func_70448_g().func_77973_b() == Items.field_151062_by)
      if (is_damaged()) {
        mc.field_71439_g.field_71174_a.func_147297_a((Packet)new CPacketPlayer.Rotation(Float.intBitsToFloat(2.130768E9F ^ 0x7F00F074), Float.intBitsToFloat(1.06498272E9F ^ 0x7DCE58DF), true));
        mc.field_71439_g.field_71174_a.func_147297_a((Packet)new CPacketPlayerDigging(CPacketPlayerDigging.Action.RELEASE_USE_ITEM, BlockPos.field_177992_a, mc.field_71439_g.func_174811_aO()));
        mc.field_71439_g.field_71174_a.func_147297_a((Packet)new CPacketPlayerTryUseItem(EnumHand.MAIN_HAND));
      } else {
        if (this.disable.get_value(true))
          set_disable(); 
        return;
      }  
    if (mc.field_71439_g.func_184592_cb().func_77973_b() != Items.field_151062_by && mc.field_71439_g.func_184614_ca().func_77973_b() != Items.field_151062_by && this.auto_switch.get_value(true)) {
      if (find_xp_hotbar() == -1)
        return; 
      if (is_damaged())
        mc.field_71439_g.field_71071_by.field_70461_c = find_xp_hotbar(); 
      return;
    } 
  }
  
  public Map get_armor() {
    (give up)null;
    return get_inv_slots(5);
  }
  
  public boolean is_damaged() {
    (give up)null;
    for (Map.Entry entry : get_armor().entrySet()) {
      if (((ItemStack)entry.getValue()).func_190926_b())
        continue; 
      ItemStack itemStack = (ItemStack)entry.getValue();
      double d1 = itemStack.func_77958_k();
      double d2 = (itemStack.func_77958_k() - itemStack.func_77952_i());
      double d3 = d2 / d1 * 100.0D;
      if (d3 >= this.armor_percent.get_value(1))
        continue; 
      return true;
    } 
    return false;
  }
  
  public int find_xp_hotbar() {
    (give up)null;
    byte b = 0;
    while (true) {
      9;
      if (mc.field_71439_g.field_71071_by.func_70301_a(b).func_77973_b() != Items.field_151062_by)
        continue; 
      return b;
    } 
  }
  
  public PacketXP() {
    super(Category.exploit);
  }
}
