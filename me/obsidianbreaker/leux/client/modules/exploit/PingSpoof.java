package me.obsidianbreaker.leux.client.modules.exploit;

import give up;
import java.util.Queue;
import java.util.concurrent.ConcurrentLinkedQueue;
import me.obsidianbreaker.leux.client.event.EventCancellable;
import me.obsidianbreaker.leux.client.event.events.EventPacket;
import me.obsidianbreaker.leux.client.guiscreen.settings.Setting;
import me.obsidianbreaker.leux.client.modules.Category;
import me.obsidianbreaker.leux.client.modules.Module;
import me.obsidianbreaker.leux.client.util.MathUtil;
import me.obsidianbreaker.leux.client.util.Timer;
import me.zero.alpine.fork.listener.EventHandler;
import me.zero.alpine.fork.listener.Listener;
import net.minecraft.network.Packet;

public class PingSpoof extends Module {
  public Setting delay = create("Delay MS", "PSDelay", 20, 0, 1000);
  
  public boolean receive = true;
  
  @EventHandler
  public Listener event = new Listener(this::lambda$new$0, new java.util.function.Predicate[0]);
  
  public Timer timer = new Timer();
  
  public Setting secondDelay = create("Delay Seconds", "PSDelayS", 5, 0, 30);
  
  public Queue packets = new ConcurrentLinkedQueue();
  
  public Setting seconds = create("Seconds", "PSSeconds", false);
  
  public PingSpoof() {
    super(Category.exploit);
  }
  
  public void clearQueue() {
    (give up)null;
    if (mc.field_71439_g != null && !mc.func_71356_B() && mc.field_71439_g.func_70089_S() && ((!this.seconds.get_value(true) && this.timer.passedMs(this.delay.get_value(1))) || (this.seconds.get_value(true) && this.timer.passedS(this.secondDelay.get_value(1))))) {
      double d = MathUtil.getIncremental(Math.random() * 10.0D, 1.0D);
      this.receive = false;
      for (byte b = 0; b < d; b++) {
        Packet packet = this.packets.poll();
        mc.field_71439_g.field_71174_a.func_147297_a(packet);
      } 
      this.timer.reset();
      this.receive = true;
    } 
  }
  
  public void update() {
    (give up)null;
    clearQueue();
  }
  
  public void lambda$new$0(EventPacket.SendPacket paramSendPacket) {
    (give up)null;
    if (this.receive && mc.field_71439_g != null && !mc.func_71356_B() && mc.field_71439_g.func_70089_S() && paramSendPacket.get_era() == EventCancellable.Era.EVENT_PRE && paramSendPacket.get_packet() instanceof net.minecraft.network.play.client.CPacketKeepAlive) {
      this.packets.add(paramSendPacket.get_packet());
      paramSendPacket.cancel();
    } 
  }
  
  public void disable() {
    (give up)null;
    clearQueue();
  }
}
